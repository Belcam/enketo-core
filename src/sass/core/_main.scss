body {
  @include font-normal; }

strong {
  @include font-bold; }

h2, h3, h4 {
  @include font-bold;
  color: $accent-color-1;
  text-align: center;}
h3{
  padding: 5px 0 15px 0;
  word-wrap: break-word;}
h4{
  text-align: left;  }

/** hide stuff **/
.or [lang]:not(.active), .or-option-translations, .or-appearance-page-break, .or-constraint-msg, .or-required-msg,
.itemset-template, .itemset-labels {
  display: none; }

/** apply bootstrap .form-control class by default **/
input, select, textarea {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  vertical-align: middle;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius;
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Disabled and read-only inputs
  // Note: HTML5 says that controls under a fieldset > legend:first-child won't
  // be disabled if the fieldset is disabled. Due to implementation difficulty,
  // we don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $input-bg-disabled;
  }

  // [converter] extracted textarea& to textarea.form-control
}


/** hints **/
.or-hint.active{
  @include font-normal;
  color: #888888;
  display: block;
  line-height: 1.5em;
  font-weight: normal;
  font-size: .7em;
  font-style: italic;
  ~ br{
    display: none; } }
label .or-hint.active{
  padding-top: .5em; } 
legend .or-hint.active{
  padding-bottom: .6em; }

.or .form-logo img {
  position: relative;
  float: none;
  left: 50%;
  max-height: 200px;
  width: 120px;
  margin: 30px 0 10px -60px; }
.or-repeat {
  background-color: lighten($accent-color-1, 55%);
  margin: 0 0 3px 0;
  padding: 10px 10px 10px 10px;
  .repeat-number {
    height: 2em;
    display: block;
    float: right;
    color: $accent-color-1;
    + .or-group {
      border-top: none; } } } 
.or-group {
  border-top: $line; 
  margin: 1.5em 0 0.4em 0;
    .or-group{
      margin: 1.5em 0 0.5em 25px;} }
#stats + .or-group, #or-preload-items + .or-group, #form-languages + .or-group{
  border-top: none; }
label, fieldset {
  @include font-bold;
  display: block;
  margin: 0 0 0.7em 0;
  padding-top: 0.9em;}
.restoring-sanity-to-legends{
  fieldset{
  padding: 0;
  margin:0; } }
legend {
  position: relative;
  line-height: 12px;
  border: none;
  margin-bottom: 0.6em; //works in Chrome
  > span {
    vertical-align: 12px; } //works in safari, some other webkit browsers 
  ~ label {
    margin: 0;
    padding: 5px 0 3px 0;
    @include font-normal;
    &:not(.btn-radiocheck):hover{
      background-color: lighten($accent-color-1, 48%);}
    .active{
      margin-left: 5px; } } }
label, legend, .trigger {
  font-size: 1em; }
.or {
  img, audio, video {
  float: right;
  max-height: 300px;
  max-width: 70%; } }
input:not([type="radio"]):not([type="checkbox"]), textarea, select {
  display: inline-block;
  margin: 8px 0 0 0; }
.touch{
  input:not([type="radio"]):not([type="checkbox"]), textarea, select {
    @include border-radius(2px);
    margin: 10px 0 10px 0; 
    color: #104b66;
    background-color: #f5f2ed; }
  .input-append .add-on {
    margin-top:10px; }
  input:not([type="radio"]):not([type="checkbox"]), textarea {
    border: 1px solid #ddd8ce; } }
input:not([type="radio"]):not([type="checkbox"]), textarea {
  height: $input-height; }
input{
  &[type="text"],&[type="password"], &[type="url"], &[type="email"] {
  width: $input-max-width } }
input{
  &[type=date], &[type=number] {
  width: $input-min-width; } }
input[type="radio"], input[type=checkbox] {
  margin: -2px 8px 0px 7px; }

textarea {
  width: $input-max-width;
  resize: vertical;
  min-height: 9em;}
fieldset {
  .one-more {
    margin: 0 -34px -5px 10px; }
  .remove {
    float: right;
    margin-right: 0; } }

.input-append .add-on {
  padding: ($input-height - 12)/2 5px;
  margin-top: 8px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;}
.alert {
  margin-bottom: 4px;}
.trigger {
  @include font-normal;
  padding: 7px 12px;
  margin: 1em 0; }
.required{
  margin-left: 3px;
  color: $accent-color-1;}
.required-subtle{
  @include transition-slow;
  float: right;
  margin-top: 4px;
  color: #e00e0e;
  font-size: 0.8em;
  @media screen and (max-width: 500px){
    font-size: 0.5em; }
    &.focus{
      @include transition-slow;
      color: #333333; } };
.disabled {
  opacity: 0.5; }
[class^="invalid"], [class*=" invalid"] {
  @include transition-fast;
  @include error-bg-border;
  $pad: 10px;
  margin-right: -$pad;
  margin-left: -$pad;
  padding-left: $pad;
  padding-right: $pad;
  padding-bottom: $pad;}
.invalid-required {
  .or-required-msg.active{
    @include error-text; } }
.invalid-constraint{
  .or-constraint-msg.active{
    @include error-text; } } 
.or-branch {
  display: none;}
.date, .bootstrap-timepicker {
  input {
    width: $input-min-width;} }
.bootstrap-timepicker {     //MOVE THIS
  display: inline-block; } 
.date {                     //MOVE THIS
  display: inline-block;
  margin-right: 10px; } 
.btn-reset {
  margin-left: 10px;
  color: #ddd;
  background: none;
  border: none;
  box-shadow: none;
  opacity: 0.5;
  &:hover {
    opacity: 0.7; }
  &[readonly] {
    background: none; }
  i{
    vertical-align: bottom;} }
